
<project name="weblab-3" default="build" xmlns:ivy="antlib:org.apache.ivy.ant">

<loadproperties srcfile="application.properties"/>
    <path id="application" location="${build.dir}/${ant.project.name}.jar"/>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
<classpath>
<pathelement
  location="/usr/share/java/lib/ant-contrib-0.3.jar"/>
</classpath>
</taskdef>

  <target name="resolve" description="resolve dependencies">
        <ivy:resolve/>
        <ivy:cachepath pathid="dependency"/>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir= "${report.dir}"/>
        <delete file="${aboba.zip}"/>
        <delete file="${aboba.txt}"/>
        <delete dir="history"/>
        <delete dir="ascii"/>



    </target>

    <target name="compile" depends="resolve">
        <mkdir dir="${build.dir}"/>
        <delete dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}">
            <classpath refid="dependency"/>
        </javac>
    </target>

    <target name="build" depends="compile">
        <jar destfile="${build.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>
    <property name = "flg" value = "false"/>

    <target name="test" depends="build" >
        <junit printsummary="on" failureproperty = "zxc" >
            <classpath>
                <path refid="application"/>
                <path refid="dependency"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest>
                <path refid="application"/>
                <path refid="dependency"/>
                <fileset dir="${test.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>

            <if>
                <not><isset property="zxc" /></not>
            <then>
                    <touch file="test.flg"/>

            </then>
            <else>
                <echo message="NOPE"/>
            </else>
            </if>

    </target>
    

    <target name="scp" depends="build">
        <scp file="${build.dir}/${jar.file}" todir="${ssh.user}:${ssh.password}@${ssh.host}:${ssh.remote.dir}" port="${ssh.port}"/>
    </target>

    <target name="xml">
        <xmlvalidate>
            <fileset dir="${src.dir}">
                <include name="**/*.xml"/>
            </fileset>
        </xmlvalidate>
    </target>


    <target name="alt" depends="build">
        <copy todir="${alt.dir}">
            <fileset dir="${src.dir}"/>
        </copy>
        <replaceregexp match="${alt.regex}" replace="${alt.replacement}" flags="g">
            <fileset dir="${alt.dir}"/>
        </replaceregexp>
        <antcall target="build">
            <param name ="src.dir" value="${alt.dir}"/>
            <param name ="build.dir" value="${alt.build}"/>
            <param name ="classes.dir" value="${alt.classes}"/>
        </antcall>
    </target>


    <target name = "native2ascii">
        <native2ascii encoding="UTF-8" src="." dest="${ascii.dest}"
               includes="${locales.file}" ext="${ascii.ext}"/>
    </target>
 
    
    <target name="music" depends="build">
        <echo message="Build completed! Playing music..."/>
        <exec executable="aplay"> 
            <arg value="${music.path}"/> 
        </exec>
    </target>


  <target name="team">

  <exec executable="svn" outputproperty="revision.list">
    <arg line="log ${svn.repo} -l 3 -q"/>
  </exec>
        <propertyregex property="revision.list" input="${revision.list}" regexp="\n" replace="" global="true" override="true"/>
        <propertyregex property="revision1" input="${revision.list}" regexp="([0-9]+)(?= \|).*([0-9]+)(?= \|).*([0-9]+)(?= \|)" select="\1"/>
        <propertyregex property="revision2" input="${revision.list}" regexp="([0-9]+)(?= \|).*([0-9]+)(?= \|).*([0-9]+)(?= \|)" select="\2"/>
        <propertyregex property="revision3" input="${revision.list}" regexp="([0-9]+)(?= \|).*([0-9]+)(?= \|).*([0-9]+)(?= \|)" select="\3"/>
        <mkdir dir="src/${revision1}"/>
        <mkdir dir="src/${revision2}"/>
        <mkdir dir="src/${revision3}"/>

        <mkdir dir="build/${revision1}"/>
        <mkdir dir="build/${revision2}"/>
        <mkdir dir="build/${revision3}"/>
            <exec executable="svn">
                <arg line="checkout -r ${revision1} ${svn.repo} build/${revision1}"/>
            </exec>

            <ant antfile="build.xml" dir="build/${revision1}/trunk/weblab-3"/>
            
            <exec executable="svn">
                <arg line="checkout -r ${revision2} ${svn.repo} build/${revision2}"/>
            </exec>
            <ant antfile="build.xml" dir="build/${revision2}/trunk/weblab-3"/>

            <exec executable="svn">
                <arg line="checkout -r ${revision3} ${svn.repo} build/${revision3}"/>
            </exec>

            <ant antfile="build.xml" dir="build/${revision3}/trunk/weblab-3"/>
           
  
  
     
        <!-- Package the resulting jar files into a zip archive -->
        <zip destfile="${zip.name}">
            <fileset dir="build/${revision1}/trunk/weblab-3/build" includes="*.jar"/>

            <fileset dir="build/${revision2}/trunk/weblab-3/build" includes="*.jar"/>

            <fileset dir="build/${revision3}/trunk/weblab-3/build" includes="*.jar"/>

        </zip>
    </target>


  
     



    <target name="history" depends="compile">
    <mkdir dir="history"/>



  <exec executable="svn" outputproperty="revision.list">
    <arg line="log ${svn.repo} -l 1 -q"/>
  </exec>
    <propertyregex property="revision.list" input="${revision.list}" regexp="\n" replace="" global="true" override="true"/>
    <propertyregex property="last.revision" input="${revision.list}" regexp="([0-9]+)(?= \|)" select="\1"/>
    <var name="revision" value = "1"/>
    
    <for param="i" begin="1" end="${last.revision}">
        <sequential>
          <delete dir="history"/>
          <mkdir dir="history"/>


            <exec executable="svn">
                <arg line="checkout -r @{i} ${svn.repo} history"/>
            </exec>
            <echo message = "ITER=@{i}"></echo>
            <ant antfile="build.xml" dir="history/trunk/weblab-3" target = "build"/>

            <ant antfile="build.xml" dir="history/trunk/weblab-3" target = "test"/>
            
            <available file="history/trunk/weblab-3/test.flg" property="av-flag"/>
            <echo message="AV_FLAG=${av-flag}"/>
             <if>
                <available file="history/trunk/weblab-3/test.flg"/>
                    <then>
                    <var name="revision" value="@{i}"/>
                    <echo message="REVISION=@{i}"/>

                    </then>
                    <else>
                    
                    </else>
            </if>
            
            
             

  

        </sequential>
    </for> 
    <echo message = "I=${revision}"/>
    <exec executable="svn" output="${file.name}">
          <arg line ="diff -r ${revision}:${last.revision} ${dir.diff}"/>
    </exec>   
</target>

<target name="report" depends="test">
    <delete file = "test.flg"/>
     <delete dir = "${report.dir}"/>

    <ant antfile="build.xml" target = "test"/>
    <mkdir dir="${report.dir}"/>

    <if>
            <available file="test.flg"/>
                <then>
                    <delete file = "test.flg"/>

                    <mkdir dir="${report.dir}"/>
                        <move todir="${report.dir}">
                        <fileset dir=".">
                            <include name="**/TEST-*.xml"/>
                        </fileset>
                        </move>
                         <exec executable="svn" >
                        <arg line =" add ${report.dir}"/>
        
                        </exec>   
                        <exec executable="svn" >
                            <arg line ="commit -m ''"/>
        
                        </exec>   

                </then>
                <else></else>
                    
    </if>
            

  
       


</target>


</project>